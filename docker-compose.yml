version: '3'
services:
  postgresql:
    image: postgres:10.13-alpine
    container_name: postgresql
    volumes:
      - ${VOLUMES_DIR}/database/postgresql/data/:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=keycloak
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 5432:5432
    networks:
      - backend_spring
  s3:
   image: quay.io/minio/minio:RELEASE.2022-09-01T23-53-36Z.fips
   container_name: minio
   volumes:
     - ${VOLUMES_DIR}/s3/minio/data:/data
   environment:
     - MINIO_ROOT_USER=${MINIO_KEY}
     - MINIO_ROOT_PASSWORD=${MAIN_PASSWORD}
   command: server /data --console-address ":9001"
   ports:
    - 9000:9000
    - 9001:9001
   healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3
   networks:
     - backend_spring

  keycloak:
   image: ucm/keycloak
   depends_on:
     - postgresql
   container_name: keycloak
   restart: unless-stopped
   command:
     [
     'start',
     '--db-url=jdbc:postgresql://postgresql/keycloak',
     ]
   volumes:
     - ${VOLUMES_DIR}/customTheme:/opt/keycloak/themes
   environment:
     - KC_DB_USERNAME=postgres
     - KC_DB_PASSWORD=${POSTGRES_PASSWORD}
   ports:
     - 9080:9080
   networks:
     - backend_spring

  jhipster-registry:
    restart: unless-stopped
    image: jhipster/jhipster-registry:v7.3.0
    volumes:
      - ./central-server-config:/central-config
    container_name: jhipster-registry
    environment:
      - _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=prod,api-docs,oauth2
      - SPRING_SECURITY_USER_PASSWORD=${MAIN_PASSWORD}
      - JHIPSTER_REGISTRY_PASSWORD=${MAIN_PASSWORD}
      - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_TYPE=native
      - SPRING_CLOUD_CONFIG_SERVER_COMPOSITE_0_SEARCH_LOCATIONS=file:./central-config/docker-config/
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://192.168.1.10:9080/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=${CLIENT_ID}
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=${CLIENT_SECRECT}
    #depends_on:
    #  - keycloak
    ports:
       - 8761:8761  
    networks:
     - backend_spring

  zookeeper:
    restart: unless-stopped
    image: docker.uclv.cu/confluentinc/cp-zookeeper:7.3.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - backend_spring

  kafka:
    restart: unless-stopped
    image: docker.uclv.cu/confluentinc/cp-kafka:7.3.1
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - backend_spring

  elasticsearch:
    restart: unless-stopped
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms256m -Xmx512m"
      - "ES_JAVA_OPTS=-XX:UseAVX=0"
      - ELASTIC_PASSWORD=${MAIN_PASSWORD}
      - xpack.security.enabled=true
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.keystore.path=/usr/share/elasticsearch/config/certificates/elastic-certificates.p12
      - xpack.security.transport.ssl.truststore.path=/usr/share/elasticsearch/config/certificates/elastic-certificates.p12
      - "http.cors.enabled=true"
      - "http.cors.allow-origin=*"
      - "http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"
      - "http.cors.allow-credentials=true"       
    volumes:
      - ${VOLUMES_DIR}/elasticsearch/single:/usr/share/elasticsearch/data
      - ${VOLUMES_DIR}/elasticsearch/certs:/usr/share/elasticsearch/config/certificates
    ports:
      - 9200:9200
    networks:
      - backend_spring
  
networks:
  backend_spring:

